# serverless.yml

custom:
  serviceName: Route53Updater
  hostedZoneId: ZHQI7S8NKQBRD
  shared_key: ${file(../secrets/shared_key.json):shared_key}
service:
  name: ${self:custom.serviceName}

frameworkVersion: ">=1.0.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  stage: dev # Set the default stage used. Default is dev
  region: us-east-1 # Overwrite the default region used. Default is us-east-1
  stackName: ${self:custom.serviceName}-stack # Use a custom name for the CloudFormation stack
  apiName: ${self:custom.serviceName}-api # Use a custom name for the API Gateway API
  timeout: 10 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds
  logRetentionInDays: 1 # Set the default RetentionInDays for a CloudWatch LogGroup
  deploymentBucket:
    name: apogee-lambda-deploy # Deployment bucket name. Default is generated by the framework
    serverSideEncryption: AES256 # when using server-side encryption
  versionFunctions: false # Optional function versioning
  endpointType: regional # Optional endpoint configuration for API Gateway REST API. Default is Edge.

  usagePlan: # Optional usage plan configuration
    quota:
      limit: 2500
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 100
      rateLimit: 50
  stackTags: # Optional CF stack tags
    key: value
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'route53:ChangeResourceRecordSets'
      Resource: 'arn:aws:route53:::hostedzone/ZHQI7S8NKQBRD'

package:
  artifact: ../dist/lambda/route53updater.zip
  individually: true
  excludeDevDependencies: true

functions:
  updater:
    handler: route53updater
    name: ${self:custom.serviceName}-${self:provider.stage}-updater
    description: Route53 domain updater
    memorySize: 128
    environment:
      SHARED_KEY: ${self:custom.shared_key}
    events:
      - http:
          path: /
          method: post
          cors: false